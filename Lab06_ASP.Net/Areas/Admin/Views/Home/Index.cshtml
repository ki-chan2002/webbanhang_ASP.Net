@{
    ViewData["Title"] = "Admin Page";
    Layout = "_Layout";
}
<h1>Admin Zone</h1>
<button type="button" class="btn btn-info" onclick="openReportTab('/admin/report/printcoffee')">Print Coffee List</button>
<input type="text" id="searchBox" placeholder="Search by Name or Id" />
<button type="button" id="searchButton" onclick="return searchCoffee()" class="btn btn-secondary">Search</button>
<div class="modal fade" id="exampleModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Messages</h5>
                <div class="ml-auto">
                    <input type="text" class="form-control" placeholder="Search by name or id" id="searchBox2">
                    <button type="button" class="btn btn-default" onclick="return searchMessage()">Tìm kiếm</button>
                </div>
            </div>
            <div class="modal-body">
                <div style="max-height: 600px; overflow-y: auto; overflow-x: auto;">
                    <table id="messageTable" class="table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Phone Number</th>
                                <th>Email</th>
                                <th>Message</th>
                            </tr>
                        </thead>
                        <tbody>
                           
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" onclick="openReportTab('/admin/report/printorder')">Print Messsage List</button>
                <button type="button" id="btnClose2" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section MODEL_DIALOG {
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"></h5>
                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" id="btn-Close"></button>
                </div>
                <div class="modal-body">
                    <form id="coffeeForm" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="name">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Enter coffee name">
                        </div>
                        <div class="form-group">
                            <label for="sPrice">S_Price</label>
                            <input type="number" class="form-control" id="sPrice" placeholder="Enter small price">
                        </div>
                        <div class="form-group">
                            <label for="lPrice">L_Price</label>
                            <input type="number" class="form-control" id="lPrice" placeholder="Enter large price">
                        </div>

                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" placeholder="Enter description" style="max-height:300px; overflow-y:hidden; resize: vertical;"></textarea>
                        </div>

                        <div class="form-group">
                            <label for="categoryId">Category</label>
                            <select class="form-control" id="categoryId" name="categoryId" style="margin-bottom: 10px; height: auto; max-height: 100px; overflow-x: hidden; border: 1px solid #ccc;">
\                                @foreach (var categories in Model.Categories)
                                {
                                    <option value="@categories.CategoryID">@categories.CategoryName</option>
                                }
                            </select>
                            <i class="fas fa-plus" id="addCategoryIcon" style="cursor: pointer; margin-left: 5px;" title="Add Category"></i>
                            <i class="fas fa-edit" id="editCategoryIcon" style="cursor: pointer; margin-left: 10px;" onclick="openEditModal()"></i>
                        </div>

                        <div id="addCategoryForm" style="display: none; margin-top: 10px;">
                            @* Form thêm mới *@
                            <div class="form-group">
                                <label for="newCategoryName">Tên Category mới:</label>
                                <input type="text" class="form-control" id="newCategoryName" name="CategoryName" style="margin-bottom:10px" />
                            </div>
                            <button type="button" id="saveNewCategory" class="btn btn-primary">Lưu</button>
                            <button type="button" id="cancelAdd" class="btn btn-secondary">Hủy</button>
                        </div>

                        <div id="editCategoryForm" style="display: none; margin-top: 10px;">
                            @* Form chỉnh sửa *@
                            <input type="hidden" id="editCategoryId" name="CategoryId" />
                            <div class="form-group">
                                <label for="editCategoryName">Tên Category:</label>
                                <input type="text" class="form-control" id="editCategoryName" name="CategoryName" style="margin-bottom:10px"/>
                            </div>
                            <button type="button" id="saveEdit" class="btn btn-primary">Lưu</button>
                            <button type="button" id="cancelEdit" class="btn btn-secondary">Hủy</button>
                        </div>
                        <div id="message" style="margin-top: 10px;"></div>
                        <div class="form-group">
                            <label for="imageFile">Image</label>
                            <input type="file" class="form-control-file" id="imageFile"/>
                            <img id="previewImage" src="#" alt="Preview" style="display: none; max-width: 100px; margin-top: 10px;" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnClose">Close</button>
                    <button type="button" class="btn btn-primary" id="btnSave">Save</button>
                </div>
            </div>
        </div>
    </div>
}
@section Coffee_Table{
    <h3>Coffee List:</h3>
    <div class="coffee-table">
        <div class="table-wrapper">
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-center">ID</th>
                        <th class="text-center">Name</th>
                        <th class="text-center">Small Price</th>
                        <th class="text-center">Large Price</th>
                        <th class="text-center">Category</th>
                        <th class="text-center">Description</th>
                        <th class="text-center">Image</th>
                        <th class="text-center">Edit</th>
                        <th class="text-center">Delete</th>
                    </tr>
                </thead>
                <tbody id="CoffeeTable" class="CoffeeTable">
                </tbody>
            </table>
        </div>
    </div>
}



<script>
     $(document).ready(function () {
        $('#addCategoryIcon').click(function () {
            $('#addCategoryForm').show();
            $('#editCategoryForm').hide();
            $('#message').empty();
        });

        $('#editCategoryIcon').click(function () {
            var selectedCategoryId = $('#CategoryId').val();
            if (selectedCategoryId === "" || selectedCategoryId === "new") {
                alert("Vui lòng chọn một category để chỉnh sửa.");
                return;
            }
            var selectedCategoryName = $('#CategoryId option:selected').text();
            $('#editCategoryId').val(selectedCategoryId);
            $('#editCategoryName').val(selectedCategoryName);
            $('#editCategoryForm').show();
            $('#addCategoryForm').hide();
            $('#message').empty();
        });

        $('#cancelAdd').click(function () {
            $('#addCategoryForm').hide();
        });

        $('#cancelEdit').click(function () {
            $('#editCategoryForm').hide();
        });

        $('#saveNewCategory').click(function () {
            var newCategoryName = $('#newCategoryName').val();
            $.ajax({
                url: 'Admin/Categories/AddNewCategory',
                type: 'POST',
                data: { categoryName: newCategoryName },
                success: function (result) {
                    if (result.success) {
                        $('#message').html('<div class="alert alert-success">Category đã được thêm.</div>');
                        $('#addCategoryForm').hide();
                        $('#newCategoryName').val("");
                        $('#CategoryId').append($('<option>', {
                            value: result.newCategoryId,
                            text: result.newCategoryName
                        }));
                    } else {
                        $('#message').html('<div class="alert alert-danger">' + result.message + '</div>');
                    }
                },
                error: function () {
                    $('#message').html('<div class="alert alert-danger">Lỗi khi thêm category.</div>');
                }
            });
        });

        $('#saveEdit').click(function () {
            var categoryId = $('#editCategoryId').val();
            var newCategoryName = $('#editCategoryName').val();
            $.ajax({
                url: 'Admin/Categories/EditCategory',
                type: 'POST',
                data: { categoryId: categoryId, categoryName: newCategoryName },
                success: function (result) {
                    if (result.success) {
                        $('#message').html('<div class="alert alert-success">Category đã được cập nhật.</div>');
                        $('#editCategoryForm').hide();
                        $('#CategoryId option:selected').text(newCategoryName);
                    } else {
                        $('#message').html('<div class="alert alert-danger">' + result.message + '</div>');
                    }
                },
                error: function () {
                    $('#message').html('<div class="alert alert-danger">Lỗi khi cập nhật category.</div>');
                }
            });
        });
    });
</script>

@section Script{
    <script type="text/javascript">
        var isUpdate = false;
        var currentId = 0;
        $(document).ready(function () {
            showCoffeeList();
            showMessageList();
            $("#btnCreateNew").click(function () {
                isUpdate = false;
                $("#exampleModalLabel").text("Create New Coffee");
                $("#btnSave").text("Create");
                $("#exampleModal").modal("show");
            });

            $("#btnListOrder").click(function(){
                $("#exampleModal2").modal("show");
            });

            $("#imageFile").change(function () {
                var file = this.files[0];
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#previewImage").attr("src", e.target.result);
                        $("#previewImage").show();
                    }
                    reader.readAsDataURL(file);
                } else {
                    $("#previewImage").attr("src", "#");
                    $("#previewImage").hide();
                }
            });

            $("#btnClose2").click(function(){
                $("#exampleModal2").modal("hide");
            });

            $("#btnClose").click(function (e) {
                $("#message").empty();
                $('#coffeeForm')[0].reset();
                $("#previewImage").attr("src", "#");
                $("#previewImage").hide();
                $("#exampleModal").modal("hide");
            });

            $("#btn-Close").click(function (e) {
                $("#exampleModal").modal("hide");
            });

            $("#btnSave").click(function (e) {
                e.preventDefault(); // Ngăn chặn submit form mặc định

                var formData = new FormData();
                formData.append('CoffeeName', $('#name').val());
                formData.append('S_Price', $('#sPrice').val());
                formData.append('L_Price', $('#lPrice').val());
                formData.append('Description', $('#description').val());
                formData.append('CategoryID', $('#categoryId').val());
                var imageFile = $('#imageFile')[0].files[0];
                if (imageFile) {
                    formData.append('ImageFile', imageFile);
                }
                if (!isUpdate) {
                    $.ajax({
                        url: '/Admin/Coffees/CreateCoffee', // Đường dẫn đến action Create
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            if (result.success) {
                                $('#ExampleModal').modal('hide'); // Đóng modal
                                // Reset form sau khi thành công
                                $('#coffeeForm')[0].reset();
                                $("#previewImage").attr("src", "#");
                                $("#previewImage").hide();
                                showCoffeeList();
                            } else {
                                $('#message').html('<div class="alert alert-danger">' + result.message + '</div>');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Lỗi AJAX:", status, error, xhr.responseText);
                            $('#message').html('<div class="alert alert-danger">Lỗi khi thêm cà phê.</div>');
                        }
                    });
                }
                else{
                    formData.append('CoffeeID', currentId)
                    $.ajax({
                        url: '/Admin/Coffees/EditCoffee',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            if(result.success){
                                $('#message').html('<div class="alert alert-success">Coffee đã được cập nhật.</div>');
                                showCoffeeList();
                            } else {
                                $('#message').html('<div class="alert alert-danger">' + result.message + '</div>');
                            }
                        },
                        error: function (xhr, status, error) {
                           console.error("Lỗi AJAX:", status, error, xhr.responseText);
                            $('#message').html('<div class="alert alert-danger">Lỗi khi cập nhật cà phê.</div>');
                        }
                    });
                }
            });
         
        });
        function openReportTab(url) {
            window.open(url, '_blank');
        }
        function showMessageList() {
            $("#messageTable tbody").empty();

            $.ajax({
                url: "/Admin/Messages/ShowMessageList", // Kiểm tra lại URL này
                type: "GET",
                dataType: "json", // Bắt buộc để jQuery tự động parse JSON
                success: function (data) {
                    if (data && data.$values && Array.isArray(data.$values)) { // Kiểm tra data có tồn tại và có dữ liệu
                        data.$values.forEach(AppendMessage);
                    } else {
                        // Xử lý trường hợp không có dữ liệu
                        $("#messageTable tbody").append("<tr><td colspan='5'>No messages found.</td></tr>");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching messages:", xhr, status, error);
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        alert(xhr.responseJSON.message); // Hiển thị thông báo lỗi từ server (nếu có)
                    } else {
                        alert("An error occurred while fetching messages."); // Thông báo lỗi chung
                    }
                }
            });
        }

        function searchMessage() {
            $('#messageTable tbody').empty(); // Xóa nội dung bảng trước khi hiển thị kết quả tìm kiếm
            let searchTerm = $('#searchBox2').val();

            if (searchTerm.trim() === "") { // Kiểm tra nếu ô tìm kiếm rỗng
                alert("Vui lòng nhập từ khóa tìm kiếm.");
                showMessageList();//Hiển thị lại toàn bộ message
                return;
            }

            $.ajax({
                url: '/Admin/Messages/SearchMessageByNameOrID',
                type: 'POST',
                dataType: 'json',
                data: { searchTerm: searchTerm }, // Đổi tên 'result' thành 'searchTerm' cho rõ ràng
                success: function (data) {
                    if (data && data.$values && Array.isArray(data.$values)) { // Kiểm tra dữ liệu trả về có tồn tại và có phần tử
                        data.$values.forEach(function (message) {
                            AppendMessage(message);
                        });
                    } else {
                        $('#messageTable tbody').append('<tr><td colspan="5" class="text-center">Không tìm thấy kết quả.</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi tìm kiếm tin nhắn:", xhr, status, error);
                    alert("Đã có lỗi xảy ra trong quá trình tìm kiếm.");
                    showMessageList();//Hiển thị lại toàn bộ message
                },
                complete: function(){
                    $('#searchBox2').val(''); // Xóa nội dung ô tìm kiếm sau khi hoàn thành
                }
            });
        }

        function AppendMessage(message) {
            let row = `<tr>
                           <td class="${message.type === 'done' ? 'text-success' : (message.type === 'fail' ? 'text-danger' : '')}">${message.messageID}</td>
                           <td class="${message.type === 'done' ? 'text-success' : (message.type === 'fail' ? 'text-danger' : '')}">${message.customerName}</td>
                           <td class="${message.type === 'done' ? 'text-success' : (message.type === 'fail' ? 'text-danger' : '')}">${message.customerPhoneNumber}</td>
                           <td class="${message.type === 'done' ? 'text-success' : (message.type === 'fail' ? 'text-danger' : '')}">${message.customerEmail}</td>
                           <td class="${message.type === 'done' ? 'text-success' : (message.type === 'fail' ? 'text-danger' : '')}">${message.description}</td>
                           
                       </tr>`;
            $('#messageTable tbody').append(row);

        }

 
        function showCoffeeList() {
            $(".CoffeeTable").empty();
            $.ajax({
                url: '/Admin/Coffees/ShowCoffeeList/',
                type: 'GET',
                datatype: 'json',
                success: function (data) {
                    $.each(data, function (i, item) {
                    var Id = item.coffeeID;
                    var Name = item.coffeeName;
                    var S_Price = item.s_Price;
                    var L_Price = item.l_Price;
                    var Description = item.description;
                    var Category = item.category ? item.category.categoryName : "Không có danh mục"; // Kiểm tra null
                    var ImagePath = item.imagePath;
                    AppendNewCoffee(Id, Name, S_Price, L_Price, Description, Category, ImagePath, ".CoffeeTable");
                    });
                },
                error: function (err) {
                    alert("Error: " + err.responseText);
                }
            });
        }
        function AppendNewCoffee(Id, Name, S_Price, L_Price, Description, Category, ImagePath, classname) {
            var row = "<tr>";
            row += "<td class=\"text-center\">" + Id + "</td>";
            row += "<td class=\"text-center\">" + Name + "</td>";
            row += "<td class=\"text-center\">" + S_Price + "</td>";
            row += "<td class=\"text-center\">" + L_Price + "</td>";
            row += "<td class=\"text-center\">" + Category + "</td>";
            row += "<td class=\"text-center\">" + Description + "</td>";
            row += "<td class=\"text-center\">";
            if (ImagePath) {
                row += "<img src=\"/vendor/img/" + ImagePath + "?random=" + Date.now() + "\" alt=\"coffee\" style=\"max-width: 200px; max-height: 200px;\" />";
            } else {
                row += "No image available";
            }
            row += "</td>";
            row += "<td class=\"text-center\"><button type=\"button\" id=\"btnEdit\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" onclick=\"return GetCoffee(" + Id + ")\">Edit</button></td>";
            row += "<td class=\"text-center\"><button type=\"button\" id=\"btnDelete\" class=\"btn btn-danger\" onclick=\"return DeleteCoffee(" + Id + ")\">Delete</button></td>";
            row += "</tr>";

            $(classname).append(row);
        }

        function GetCoffee(id){
            isUpdate = true;
            currentId = 0;
            $.ajax({
                url: '/Admin/Coffees/GetCoffee/' + id,
                type: 'GET',
                dataType: 'json',
                success: function(data)
                {
                    if(data)
                    {
                        $("#name").val(data.coffeeName);
                        $("#sPrice").val(data.s_Price);
                        $("#lPrice").val(data.l_Price);
                        $("#category").val(data.categoryID);
                        $("#description").val(data.description);
                        $("#category").val(data.categoryID);
                        $("#imageFile").val("");
                        $("#previewImage").attr("src", "/vendor/img/" + data.imagePath + "?random=" + Date.now());
                        $("#previewImage").show();
                        $("#exampleModal").modal("show");
                        currentId = data.coffeeID;
                    } else {
                        alert("Không tìm thấy dữ liệu cà phê.");
                    }
                },
                error: function (err)
                {
                    console.error("Lỗi AJAX:", err);
                    alert("Error:" + err.responseText);
                }
            });
        }
        function DeleteCoffee(id) {
            var confirmed = confirm("Bạn có chắc chắn muốn xóa không?");

            if (confirmed) {
                $.ajax({
                    url: '/Admin/Coffees/DeleteCoffee/' + id,
                    type: 'POST',
                    dataType: 'json',
                    success: function (data) {
                        if(data.success){
                            showCoffeeList();
                        }
                    },
                    error: function (err) {
                        alert("Error: " + err.responseText);
                    }
                });
            }
        }

        function searchCoffee() {
            var searchTerm = $('#searchBox').val();
            $.ajax({
                url: '/admin/home/getcoffeebynameorid',
                type: 'POST',
                dataType: 'json',
                data: { nameOrId: searchTerm },
                success: function (data) {
                    $.each(data, function (i, item) {
                        var Id = item.id;
                        var Name = item.name;
                        var S_Price = item.s_Price;
                        var L_Price = item.l_Price;
                        var ImagePath = item.imagePath;
                        if (item.type == "hot") {
                            AppendNewCoffee(Id, Name, S_Price, L_Price, ImagePath, ".coffeeHotTable");
                        }
                        if (item.type == "cold") {
                            AppendNewCoffee(Id, Name, S_Price, L_Price, ImagePath, ".coffeeColdTable");
                        }
                    });
                    $('#searchBox').val('');
                },
                error: function (err) {
                    showCoffeeList();
                }
            });
        }

    </script>
}
